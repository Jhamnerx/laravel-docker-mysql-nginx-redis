version: "3.7"
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    extra_hosts:
      - "internal.host:host-gateway"
    networks:
      - laravel-network
    working_dir: /var/www
    volumes:
      - ./app:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./app:/var/www
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf
      - ./nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf
    restart: on-failure
    depends_on:
      - app
      - db
    networks:
      - laravel-network
  #supervisor Service
  supervisor:
    image: laravel-app
    container_name: supervisor
    networks:
      - laravel-network
    depends_on:
      - app
      - webserver
    volumes:
      - ./app:/var/www
      - ./supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
    entrypoint:
      ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
      #- supervisord
      #- supervisorctl start all
  #MySQL Service
  db:
    image: mysql:8.0.30
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_PASSWORD: laravel
      MYSQL_ROOT_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel-network
  #Redis Service
  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./app:/var/www
    networks:
      - laravel-network
  artisan:
    build:
      context: .
      dockerfile: artisan.dockerfile
    container_name: artisan
    volumes:
      - ./app:/var/www
    depends_on:
      - db
    working_dir: /var/www
    entrypoint: ["php", "/var/www/artisan"]
    networks:
      - laravel-network

#Docker Networks
networks:
  laravel-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
